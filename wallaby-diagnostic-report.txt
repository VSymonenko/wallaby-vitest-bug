```
{
  editorVersion: '1.94.0',
  pluginVersion: '1.0.382',
  editorType: 'VSCode',
  osVersion: 'win32 10.0.22631',
  nodeVersion: 'v20.18.0',
  coreVersion: '1.0.1603',
  pnp: '<not set>',
  pnpEsm: '<not set>',
  checksum: 'YWU4MGEzNjhmNDVkYmE3YjQ2NGVjM2NjMzE2M2ZiOTUsMTc2NDExNTIwMDAwMCww',
  config: {
    diagnostics: {
      vitest: {
        config: {
          config: {
            allowOnly: true,
            isolate: true,
            watch: true,
            globals: false,
            environment: 'node',
            pool: 'forks',
            clearMocks: false,
            restoreMocks: false,
            mockReset: false,
            unstubGlobals: false,
            unstubEnvs: false,
            include: [ '**/*.{test,spec}.?(c|m)[jt]s?(x)' ],
            exclude: [
              '**/node_modules/**',
              '**/dist/**',
              '**/cypress/**',
              '**/.{idea,git,cache,output,temp}/**',
              '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*'
            ],
            teardownTimeout: 10000,
            forceRerunTriggers: [ '**/package.json/**', '**/{vitest,vite}.config.*/**' ],
            update: false,
            reporters: [ [ 'default', {} ] ],
            silent: false,
            hideSkippedTests: false,
            api: { middlewareMode: true },
            ui: false,
            uiBase: '/__vitest__/',
            open: true,
            css: { include: [], modules: { classNameStrategy: 'stable' } },
            coverage: {
              provider: 'v8',
              enabled: false,
              all: true,
              clean: true,
              cleanOnRerun: true,
              reportsDirectory: './coverage',
              exclude: [
                'coverage/**',
                'dist/**',
                '**/node_modules/**',
                '**/[.]**',
                'packages/*/test?(s)/**',
                '**/*.d.ts',
                '**/virtual:*',
                '**/__x00__*',
                '**/\x00*',
                'cypress/**',
                'test?(s)/**',
                'test?(-*).?(c|m)[jt]s?(x)',
                '**/*{.,-}{test,spec,bench,benchmark}?(-d).?(c|m)[jt]s?(x)',
                '**/__tests__/**',
                '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*',
                '**/vitest.{workspace,projects}.[jt]s?(on)',
                '**/.{eslint,mocha,prettier}rc.{?(c|m)js,yml}'
              ],
              reportOnFailure: false,
              reporter: [ [ 'text', {} ], [ 'html', {} ], [ 'clover', {} ], [ 'json', {} ] ],
              extension: [
                '.js',     '.cjs',
                '.mjs',    '.ts',
                '.mts',    '.tsx',
                '.jsx',    '.vue',
                '.svelte', '.marko',
                '.astro'
              ],
              allowExternal: false,
              excludeAfterRemap: false,
              ignoreEmptyLines: true,
              processingConcurrency: 8
            },
            fakeTimers: { loopLimit: 10000, shouldClearNativeTimers: true, toFake: [ 'setTimeout', 'clearTimeout', 'setInterval', 'clearInterval', 'setImmediate', 'clearImmediate', 'Date' ] },
            maxConcurrency: 5,
            dangerouslyIgnoreUnhandledErrors: false,
            typecheck: {
              checker: 'tsc',
              include: [ '**/*.{test,spec}-d.?(c|m)[jt]s?(x)' ],
              exclude: [
                '**/node_modules/**',
                '**/dist/**',
                '**/cypress/**',
                '**/.{idea,git,cache,output,temp}/**',
                '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*'
              ],
              enabled: false
            },
            slowTestThreshold: 300,
            disableConsoleIntercept: false,
            poolOptions: { threads: {}, forks: {} },
            defines: {},
            root: 'D:/projects/tests/wallaby-vitest-bug',
            mode: 'test',
            provide: {},
            inspector: { enabled: false, waitForDebugger: false },
            clearScreen: true,
            browser: {
              enabled: false,
              headless: false,
              isolate: true,
              fileParallelism: true,
              ui: true,
              screenshotFailures: false,
              viewport: { width: 414, height: 896 },
              locators: { testIdAttribute: 'data-testid' },
              api: { port: 63315 }
            },
            fileParallelism: true,
            expect: {},
            deps: {
              moduleDirectories: [ '/node_modules/' ],
              optimizer: { ssr: { enabled: true }, web: { enabled: true } },
              web: { transformAssets: true, transformCss: true, transformGlobPattern: [] }
            },
            server: { deps: { inline: [ {}, {}, {} ], moduleDirectories: [ '/node_modules/' ], cacheDir: 'node_modules/.vite' } },
            snapshotOptions: { expand: false, snapshotFormat: {}, updateSnapshot: 'new', snapshotEnvironment: null },
            snapshotSerializers: [],
            poolMatchGlobs: [],
            setupFiles: [],
            globalSetup: [],
            cache: { dir: 'D:/projects/tests/wallaby-vitest-bug/node_modules/.vite/vitest' },
            sequence: { hooks: 'stack' },
            environmentMatchGlobs: [],
            testTransformMode: {},
            testTimeout: 5000,
            hookTimeout: 10000
          },
          projects: [
            {
              path: 'D:/projects/tests/wallaby-vitest-bug',
              config: {
                allowOnly: true,
                isolate: true,
                watch: true,
                globals: false,
                environment: 'node',
                pool: 'forks',
                clearMocks: false,
                restoreMocks: false,
                mockReset: false,
                unstubGlobals: false,
                unstubEnvs: false,
                include: [ '**\\*.{test,spec}.?(c|m)[jt]s?(x)' ],
                exclude: [
                  '**\\node_modules\\**',
                  '**\\dist\\**',
                  '**\\cypress\\**',
                  '**\\.{idea,git,cache,output,temp}\\**',
                  '**\\{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*'
                ],
                teardownTimeout: 10000,
                forceRerunTriggers: [ '**/package.json/**', '**/{vitest,vite}.config.*/**' ],
                update: false,
                reporters: [ [ 'default', {} ] ],
                silent: false,
                hideSkippedTests: false,
                api: { middlewareMode: true },
                ui: false,
                uiBase: '/__vitest__/',
                open: true,
                css: { include: [], modules: { classNameStrategy: 'stable' } },
                coverage: {
                  provider: 'v8',
                  enabled: false,
                  all: true,
                  clean: true,
                  cleanOnRerun: true,
                  reportsDirectory: './coverage',
                  exclude: [
                    'coverage/**',
                    'dist/**',
                    '**/node_modules/**',
                    '**/[.]**',
                    'packages/*/test?(s)/**',
                    '**/*.d.ts',
                    '**/virtual:*',
                    '**/__x00__*',
                    '**/\x00*',
                    'cypress/**',
                    'test?(s)/**',
                    'test?(-*).?(c|m)[jt]s?(x)',
                    '**/*{.,-}{test,spec,bench,benchmark}?(-d).?(c|m)[jt]s?(x)',
                    '**/__tests__/**',
                    '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*',
                    '**/vitest.{workspace,projects}.[jt]s?(on)',
                    '**/.{eslint,mocha,prettier}rc.{?(c|m)js,yml}'
                  ],
                  reportOnFailure: false,
                  reporter: [ [ 'text', {} ], [ 'html', {} ], [ 'clover', {} ], [ 'json', {} ] ],
                  extension: [
                    '.js',     '.cjs',
                    '.mjs',    '.ts',
                    '.mts',    '.tsx',
                    '.jsx',    '.vue',
                    '.svelte', '.marko',
                    '.astro'
                  ],
                  allowExternal: false,
                  excludeAfterRemap: false,
                  ignoreEmptyLines: true,
                  processingConcurrency: 8
                },
                fakeTimers: { loopLimit: 10000, shouldClearNativeTimers: true, toFake: [ 'setTimeout', 'clearTimeout', 'setInterval', 'clearInterval', 'setImmediate', 'clearImmediate', 'Date' ] },
                maxConcurrency: 5,
                dangerouslyIgnoreUnhandledErrors: false,
                typecheck: {
                  checker: 'tsc',
                  include: [ '**/*.{test,spec}-d.?(c|m)[jt]s?(x)' ],
                  exclude: [
                    '**/node_modules/**',
                    '**/dist/**',
                    '**/cypress/**',
                    '**/.{idea,git,cache,output,temp}/**',
                    '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*'
                  ],
                  enabled: false
                },
                slowTestThreshold: 300,
                disableConsoleIntercept: false,
                poolOptions: { threads: {}, forks: {} },
                defines: {},
                root: 'D:/projects/tests/wallaby-vitest-bug',
                mode: 'test',
                provide: {},
                inspector: { enabled: false, waitForDebugger: false },
                clearScreen: true,
                browser: {
                  enabled: false,
                  headless: false,
                  isolate: true,
                  fileParallelism: true,
                  ui: true,
                  screenshotFailures: false,
                  viewport: { width: 414, height: 896 },
                  locators: { testIdAttribute: 'data-testid' },
                  api: { port: 63315 }
                },
                fileParallelism: true,
                expect: {},
                deps: {
                  moduleDirectories: [ '/node_modules/' ],
                  optimizer: { ssr: { enabled: true }, web: { enabled: true } },
                  web: { transformAssets: true, transformCss: true, transformGlobPattern: [] }
                },
                server: { deps: { inline: [ {}, {}, {} ], moduleDirectories: [ '/node_modules/' ], cacheDir: 'node_modules/.vite' } },
                snapshotOptions: { expand: false, snapshotFormat: {}, updateSnapshot: 'new', snapshotEnvironment: null },
                snapshotSerializers: [],
                poolMatchGlobs: [],
                setupFiles: [],
                globalSetup: [],
                cache: { dir: 'D:/projects/tests/wallaby-vitest-bug/node_modules/.vite/vitest' },
                sequence: { hooks: 'stack' },
                environmentMatchGlobs: [],
                testTransformMode: {},
                testTimeout: 5000,
                hookTimeout: 10000
              }
            }
          ],
          package: {
            version: '2.1.2',
            urls: { hooks: 'file:///c:/Users/Volodymyr/.vscode/extensions/wallabyjs.wallaby-vscode-1.0.382/wallaby4c314a/runners/node/hooks.mjs' },
            paths: { root: 'D:\\projects\\tests\\wallaby-vitest-bug\\node_modules\\vitest', dist: 'D:\\projects\\tests\\wallaby-vitest-bug\\node_modules\\vitest\\dist' }
          }
        }
      }
    },
    testFramework: { version: 'vitest@0.14.0', configurator: 'vitest@0.14.0', reporter: 'vitest@0.14.0', starter: 'vitest@0.14.0', autoDetected: true },
    preserveComments: false,
    extractComments: true,
    files: [
      { pattern: '**/*.{test,spec}.?(c|m)[jt]s?(x)', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**\\*.{test,spec}.?(c|m)[jt]s?(x)', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**/node_modules/**', ignore: true, trigger: true, load: true, file: true, test: true },
      { pattern: '**/dist/**', ignore: true, trigger: true, load: true, file: true, test: true },
      { pattern: '**/cypress/**', ignore: true, trigger: true, load: true, file: true, test: true },
      { pattern: '**/.{idea,git,cache,output,temp}/**', ignore: true, trigger: true, load: true, file: true, test: true },
      { pattern: '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*', ignore: true, trigger: true, load: true, file: true, test: true },
      { pattern: '**\\node_modules\\**', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**\\dist\\**', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**\\cypress\\**', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**\\.{idea,git,cache,output,temp}\\**', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**\\{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**/*.timestamp-*', ignore: true, trigger: true, load: true, file: true },
      { pattern: '**/*.*', ignore: false, trigger: true, load: true, order: 1 }
    ],
    tests: [
      { pattern: '**/node_modules/**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**/dist/**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**/cypress/**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**/.{idea,git,cache,output,temp}/**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**\\node_modules\\**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**\\dist\\**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**\\cypress\\**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**\\.{idea,git,cache,output,temp}\\**', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**\\{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*', ignore: true, trigger: true, load: true, test: true, file: false },
      { pattern: '**/*.{test,spec}.?(c|m)[jt]s?(x)', ignore: false, trigger: true, load: true, test: true, order: 2 },
      { pattern: '**\\*.{test,spec}.?(c|m)[jt]s?(x)', ignore: false, trigger: true, load: true, test: true, order: 3 }
    ],
    workers: { initial: 1, regular: 1, recycle: false },
    dot: true,
    captureConsoleLog: true,
    filesWithNoCoverageCalculated: [],
    runAllTestsInAffectedTestFile: false,
    updateNoMoreThanOneSnapshotPerTestFileRun: false,
    compilers: {},
    logLimits: { inline: { depth: 5, elements: 5000 }, values: { default: { stringLength: 8192 }, autoExpand: { elements: 5000, stringLength: 8192, depth: 10 } } },
    preprocessors: {},
    maxConsoleMessagesPerTest: 100,
    maxTraceSteps: 999999,
    maxTraceStepsForWatchExpressionPrefetch: 0,
    autoConsoleLog: true,
    delays: { run: 0, edit: 100, update: 0 },
    teardown: undefined,
    hints: {
      ignoreCoverage: '__REGEXP /ignore coverage|istanbul ignore|c8 ignore/',
      ignoreCoverageForFile: '__REGEXP /ignore file coverage/',
      commentAutoLog: '?',
      testFileSelection: { include: '__REGEXP /file\\.only/', exclude: '__REGEXP /file\\.skip/' }
    },
    automaticTestFileSelection: true,
    runSelectedTestsOnly: false,
    mapConsoleMessagesStackTrace: false,
    extensions: {},
    env: { type: 'node', params: {}, runner: 'C:\\Program Files\\nodejs\\node.exe', viewportSize: { width: 800, height: 600 }, options: { width: 800, height: 600 }, bundle: true },
    reportUnhandledPromises: true,
    slowTestThreshold: 75,
    lowCoverageThreshold: 80,
    runAllTestsWhenNoAffectedTests: true,
    symlinkNodeModules: undefined,
    configCode: 'auto.detect#1734400718'
  },
  packageJSON: { dependencies: undefined, devDependencies: { vitest: '2.1.2' } },
  fs: { numberOfFiles: 4 },
  debug: [
    '2024-10-05T07:08:02.014Z project waiting for initial run signal\n',
    '2024-10-05T07:08:02.022Z model Initialization Completed: 426ms\n',
    '2024-10-05T07:08:02.029Z config Attempting automatic configuration for vitest\n',
    '2024-10-05T07:08:02.032Z vitest/config Detected Vitest (2.1.2).\n',
    '2024-10-05T07:08:02.716Z config Finished attempting automatic configuration for vitest (687ms)\n',
    '2024-10-05T07:08:02.718Z project Wallaby Node version: v20.18.0\n',
    '2024-10-05T07:08:02.718Z project Wallaby config: D:\\projects\\tests\\wallaby-vitest-bug\\auto.detect\n',
    '2024-10-05T07:08:02.798Z fs File system starting\n',
    '2024-10-05T07:08:02.832Z fs File system scan completed\n',
    '2024-10-05T07:08:02.849Z project File cache: C:\\Users\\Volodymyr\\.vscode\\extensions\\wallabyjs.wallaby-vscode-1.0.382\\projects\\cfdd7842cc24a53e\n',
    '2024-10-05T07:08:03.044Z ui.service.legacy Listening port 51235\n',
    '2024-10-05T07:08:03.060Z project package.json file change detected, invalidating local cache\n',
    '2024-10-05T07:08:03.067Z workers Parallelism for initial run: 1, for regular run: 1\n',
    '2024-10-05T07:08:03.067Z workers Starting run worker instance #0\n',
    '2024-10-05T07:08:03.069Z workers Web server is listening at 61271\n',
    '2024-10-05T07:08:03.069Z project File cache requires some updates, waiting required files from IDE\n',
    '2024-10-05T07:08:03.111Z project Stopping process pool\n',
    '2024-10-05T07:08:03.115Z project Test run started; run priority: 3\n',
    '2024-10-05T07:08:03.116Z project Running all tests\n',
    '2024-10-05T07:08:03.117Z workers Starting test run, priority: 3\n',
    '2024-10-05T07:08:03.117Z nodeRunner Starting sandbox [worker #0, session #ltmdn]\n',
    '2024-10-05T07:08:03.117Z nodeRunner Preparing sandbox [worker #0, session #ltmdn]\n',
    '2024-10-05T07:08:03.299Z workers Started run worker instance (delayed) #0\n',
    '2024-10-05T07:08:03.299Z nodeRunner Prepared sandbox [worker #0, session #ltmdn]\n',
    '2024-10-05T07:08:03.299Z workers [worker #0, session #ltmdn] Running tests in sandbox\n',
    "2024-10-05T07:08:03.875Z workers 'Scheduling Vitest Run (ltmdn): 2024-10-05T07:08:03.871Z'\n",
    "2024-10-05T07:08:03.883Z workers 'Vitest Run Complete (ltmdn): 2024-10-05T07:08:03.883Z'\n",
    '2024-10-05T07:08:03.884Z workers [ltmdn] Run 0 test(s), skipped 0 test(s)\n',
    '2024-10-05T07:08:03.885Z workers [ltmdn] Sandbox is responsive, closing it\n',
    '2024-10-05T07:08:03.886Z project Test run finished\n',
    '2024-10-05T07:08:03.886Z project Processed console.log entries\n',
    '2024-10-05T07:08:03.886Z project Processed loading sequences\n',
    '2024-10-05T07:08:03.886Z project Processed executed tests\n',
    '2024-10-05T07:08:03.886Z project Processed code coverage\n',
    '2024-10-05T07:08:03.892Z project Test run result processed and sent to IDE\n',
    '2024-10-05T07:09:20.089Z fs File changed: package.json\n',
    '2024-10-05T07:09:20.127Z project Test run started; run priority: 2\n',
    '2024-10-05T07:09:20.128Z testTask Test files from affected: 0, from deleted or manually requested: 0, from recently changed: 0, from loaded by: 0, from failing: 0\n',
    '2024-10-05T07:09:20.128Z project Test run finished\n',
    '2024-10-05T07:09:20.128Z project Test run data re-queued\n'
  ]
}
```